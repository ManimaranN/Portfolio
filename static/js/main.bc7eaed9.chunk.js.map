{"version":3,"sources":["Components/Header/Header.js","Components/About/AboutContent.js","Components/About/About.js","Components/Skils/SkillsContent.js","Data/SkillsData.js","Components/Skils/Skills.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js","Assets/images/header-image.png","logo.svg"],"names":["Text","Typography","Title","Header","className","type","href","src","HeaderImage","AboutContent","About","level","SkillsContent","props","skillSet","heading","skills","map","data","skillsData","Skills","class","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.bc7eaed9.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Header.css\";\nimport HeaderImage from \"../../Assets/images/header-image.png\";\n\nimport { Typography, Avatar } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst Header = () => {\n  return (\n    <div className=\"header-wrapper\">\n      <div className=\"header-main-container\">\n        <div className=\"header-content\">\n          <Text type=\"secondary\">\n            Hello ! <span className=\"wave\">👋</span>{\" \"}\n          </Text>\n          <br />\n          <div className=\"intro-line1\">\n            <Text type=\"secondary\">\n              I'm <a className=\"bold\"> Manimaran Nadarajan </a> a design-minded\n              front-end software engineer focused on building beautiful\n              interfaces & experiences\n            </Text>\n            <br />\n            <div className=\"contact\">\n              <text>\n                Get in touch 👉{\" \"}\n                <a href=\"mailto: manimaran.n36@gmail.com\">\n                  manimaran.n36@gmail.com\n                </a>\n              </text>\n            </div>\n          </div>\n        </div>\n        <div className=\"header-image-container\">\n          <img src={HeaderImage} className=\"header-image\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./About.css\";\n\nimport { Typography, Avatar } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst AboutContent = () => {\n  return (\n    <div className=\"background-content-container\">\n      <div>\n        <div className=\"background-content-content\">\n          <Text>\n            {\" \"}\n            👨‍💻 -- I'm currently working as a Software Engineer at{\" \"}\n            <a href=\"https://www.dexlock.com\">Dexlock Technologies </a> building\n            things for the web with some awesome people out there.\n          </Text>\n        </div>\n        <div className=\"background-content-content\">\n          <Text>\n            {\" \"}\n            🎓 -- I recently graduated from{\" \"}\n            <a href=\"https://www.dexlock.com\">\n              College of Engineering Chengannur{\" \"}\n            </a>\n            in Bachelor of Technology in Computer Science\n          </Text>\n        </div>\n        <div className=\"background-content-content\">\n          <Text>\n            {\" \"}\n            ⚙️ + ✏️ -- I enjoy bridging the gap between engineering and design\n            &mdash; combining my technical knowledge with my keen eye for design\n            to create a beautiful product. My goal is to always build\n            applications that are scalable and efficient under the hood while\n            providing engaging, pixel-perfect user experiences.\n          </Text>\n        </div>\n        <div className=\"background-content-content\">\n          <Text>\n            {\" \"}\n            🏸-- <strong>When I'm not in front of a computer screen</strong>,\n            I'm probably Cycling, playing Batminton with my friends, out for\n            bike ride, or crossing off another item on my bucket list.\n          </Text>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AboutContent;\n","import React from \"react\";\nimport \"./About.css\";\n\nimport AboutContent from \"./AboutContent\";\n\nimport { Typography, Avatar } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst About = () => {\n  return (\n    <div className=\"background-main-container\">\n      <div>\n        <div className=\"background-header\">\n          <Title level={4}>WHO AM I ?</Title>\n        </div>\n        <AboutContent />\n      </div>\n    </div>\n  );\n};\nexport default About;\n","import React from \"react\";\nimport \"./Skills.css\";\n\nimport { Typography, Avatar } from \"antd\";\nimport Skills from \"./Skills\";\nconst { Title, Text } = Typography;\n\nconst SkillsContent = (props) => {\n  const { skillSet } = props;\n  return (\n    <div className=\"each-skills\">\n      <div className=\"skills-header\">\n        <Text>{skillSet.heading}</Text>\n      </div>\n      <div className=\"skills-list\">\n        <ul>\n          {skillSet.skills.map((data) => {\n            return (\n              <li>\n                <Text>{data}</Text>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default SkillsContent;\n","export const skillsData = [\n  {\n    heading: \"Languages\",\n    skills: [\n      \"JavaScript (ES6)\",\n      \"TypeScript\",\n      \"HTML\",\n      \"CSS\",\n      \"Python\",\n      \"English\",\n      \"Tamil\",\n      \"Malayalam\",\n    ],\n  },\n  {\n    heading: \"Frameworks\",\n    skills: [\"React\", \"Angular\", \"Node\"],\n  },\n  {\n    heading: \"Tools\",\n    skills: [\n      \"Bash\",\n      \"Git\",\n      \"Github & Gitlab\",\n      \"Chrome DevTools\",\n      \"Postman\",\n      \"MongoDB\",\n    ],\n  },\n  {\n    heading: \"Design\",\n    skills: [\n      \"Adobe Illustrator\",\n      \"Adobe Photoshop\",\n      \"Sketch\",\n      \"Figma\",\n      \"InVision\",\n      \"Prototyping\",\n      \"Wireframing\",\n    ],\n  },\n  {\n    heading: \"Sports & Arts\",\n    skills: [\"Batminton\", \"Drawing\", \"Fishing\", \"Sleep to dream\"],\n  },\n];\n","import React from \"react\";\nimport \"./Skills.css\";\n\nimport SkillsContent from \"./SkillsContent\";\nimport { skillsData } from \"../../Data/SkillsData\";\n\nimport { Typography, Avata, Row, Col } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst Skills = () => {\n  return (\n    <div className=\"skills-main-container\">\n      <div>\n        <div className=\"skills-header\">\n          <Title level={4}>WHAT I KNOW ?</Title>\n        </div>\n        <div className=\"skills-content-container\">\n          <div class=\"grid-row\">\n            {skillsData.map((data) => {\n              return <SkillsContent skillSet={data} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Skills;\n","import React from \"react\";\n\nimport \"./Footer.css\";\n\nimport { Typography, Avatar } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-content\">\n        <Text>\n          Crafted with\n          <span class=\"heart animate-beat\">❤️</span> by manimarannadarajan ©\n          2020\n        </Text>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n//components\nimport Header from \"./Components/Header/Header\";\nimport About from \"./Components/About/About\";\nimport Skills from \"./Components/Skils/Skills\";\nimport Footer from \"./Components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <About />\n      <Skills />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header-image.00407989.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}